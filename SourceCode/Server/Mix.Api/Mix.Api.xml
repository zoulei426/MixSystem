<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mix.Api</name>
    </assembly>
    <members>
        <member name="T:Mix.Api.Controllers.AccountController">
            <summary>
            账户控制器
            </summary>
        </member>
        <member name="M:Mix.Api.Controllers.AccountController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            构造
            </summary>2
        </member>
        <member name="M:Mix.Api.Controllers.AccountController.GetAll">
            <summary>
            获取所有
            </summary>
            <returns></returns>
        </member>
        <member name="T:Mix.Api.Controllers.CompaniesController">
            <summary>
            公司控制器
            </summary>
        </member>
        <member name="M:Mix.Api.Controllers.CompaniesController.#ctor(Microsoft.Extensions.Localization.IStringLocalizer,Mix.Library.Services.ICompanyService,Mix.Library.Repositories.ICompanyRepository,AutoMapper.IMapper)">
            <summary>
            构造
            </summary>
            <param name="localizer"></param>
            <param name="companyService"></param>
            <param name="companyRepository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Mix.Api.Controllers.CompaniesController.GetCompanies(Mix.Library.Entities.DtoParameters.CompanyDtoParameters)">
            <summary>
            Gets the companies.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.CompaniesController.GetCompany(System.Guid)">
            <summary>
            根据Id获取
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.CompaniesController.GetCompanyCollection(System.Collections.Generic.IEnumerable{System.Guid})">
            <summary>
            根据ids获取公司列表（xxx,xxx,xxx）
            </summary>
            <param name="ids"></param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.CompaniesController.CreateCompany(Mix.Library.Entities.Dtos.CompanyAddDto)">
            <summary>
            添加
            </summary>
            <param name="company"></param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.CompaniesController.CreateCompanyCollection(System.Collections.Generic.IEnumerable{Mix.Library.Entities.Dtos.CompanyAddDto})">
            <summary>
            批量添加
            </summary>
            <param name="companieCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.CompaniesController.GetCompaniesOptions">
            <summary>
            选项
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.CompaniesController.CreateCompaniesResourceUri(Mix.Library.Entities.DtoParameters.CompanyDtoParameters,Mix.Data.Pagable.ResourceUriType)">
            <summary>
            Creates the companies resource URI.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:Mix.Api.Controllers.EmployeesController">
            <summary>
            员工控制器
            </summary>
        </member>
        <member name="M:Mix.Api.Controllers.EmployeesController.#ctor(Mix.Library.Repositories.ICompanyRepository,Mix.Library.Repositories.IEmployeeRepository,AutoMapper.IMapper)">
            <summary>
            构造器
            </summary>
            <param name="companyRepository"></param>
            <param name="employeeRepository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:Mix.Api.Controllers.EmployeesController.GetEmployeesForCompany(System.Guid,System.String,System.String)">
            <summary>
            获取公司下所有员工
            </summary>
            <param name="companyId"></param>
            <param name="gender"></param>
            <param name="q"></param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.EmployeesController.GetEmployeeForCompany(System.Guid,System.Guid)">
            <summary>
            获取公司下某员工
            </summary>
            <param name="companyId"></param>
            <param name="employeeId"></param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.EmployeesController.CreateEmployeeForCompany(System.Guid,Mix.Library.Entities.Dtos.EmployeeAddDto)">
            <summary>
            添加员工
            </summary>
            <param name="companyId"></param>
            <param name="employee"></param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.EmployeesController.UpdateEmployeeForCompany(System.Guid,System.Guid,Mix.Library.Entities.Dtos.EmployeeUpdateDto)">
            <summary>
            更新或新增员工
            </summary>
            <param name="companyId"></param>
            <param name="employeeId"></param>
            <param name="employee"></param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.EmployeesController.PartiallyUpdateEmployeeForCompany(System.Guid,System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{Mix.Library.Entities.Dtos.EmployeeUpdateDto})">
            <summary>
            局部更新或新增员工
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="employeeId">The employee identifier.</param>
            <param name="patchDocument">The patch document.</param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.EmployeesController.DeleteEmployeeForCompany(System.Guid,System.Guid)">
            <summary>
            Deletes the employee for company.
            </summary>
            <param name="companyId">The company identifier.</param>
            <param name="employeeId">The employee identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Mix.Api.Controllers.EmployeesController.ValidationProblem(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary)">
            <summary>
            Creates an <see cref="T:Microsoft.AspNetCore.Mvc.ActionResult" /> that produces a <see cref="F:Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest" /> response
            with validation errors from <paramref name="modelStateDictionary" />.
            </summary>
            <param name="modelStateDictionary">The <see cref="T:Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary" />.</param>
            <returns>
            The created <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult" /> for the response.
            </returns>
        </member>
        <member name="T:Mix.Api.Program">
            <summary>
            主程序
            </summary>
        </member>
        <member name="P:Mix.Api.Program.Configuration">
            <summary>
            Gets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="M:Mix.Api.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Mix.Api.Program.CreateHostBuilder(System.String[])">
            <summary>
            CreateHostBuilder
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Mix.Api.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="P:Mix.Api.Startup.Configuration">
            <summary>
            配置
            </summary>
        </member>
        <member name="M:Mix.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            构造
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:Mix.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            服务配置
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Mix.Api.Startup.ConfigureContainer(Autofac.ContainerBuilder)">
            <summary>
            AutoFact注册
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Mix.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:Mix.Api.SwaggerExtensions">
            <summary>
            Swagger扩展
            </summary>
        </member>
        <member name="M:Mix.Api.SwaggerExtensions.AddSwaggerGen(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the swagger gen.
            </summary>
            <param name="services">The services.</param>
            <returns></returns>
        </member>
    </members>
</doc>
